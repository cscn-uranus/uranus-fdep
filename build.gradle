buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.7.RELEASE")
    }
}
apply plugin: "java"
apply plugin: "war"
apply plugin: "org.springframework.boot"
apply plugin: "jacoco"

def changeActiveProfile(profile) {
    def pFile = file("src/main/resources/application.properties")
    Properties p = new Properties()
    pFile.withInputStream { stream ->
        p.load(stream)
    }
    p.setProperty("spring.profiles.active", profile)
    pFile.withOutputStream { stream ->
        p.store(stream, "Change active profile to ${profile}")
    }
}

task localProfile {
    group = "spring-profiles"
    doLast {
        changeActiveProfile("local")
    }
}
task devProfile {
    group = "spring-profiles"
    doLast {
        changeActiveProfile("dev")
    }
}
task releaseProfile {
    group = "spring-profiles"
    doLast {
        changeActiveProfile("release")
    }
}
task localBuild(dependsOn: build) {
    group = "spring-build"
    doFirst {
        localProfile
    }
}

task devBuild(dependsOn: build) {
    group = "spring-build"
    doFirst {
        devProfile
    }
}
task releaseBuild(dependsOn: build) {
    group = "spring-build"
    doFirst {
        releaseProfile
    }
}

wrapper {
    gradleVersion = '4.1'
}

war {
    baseName = "uranus-fdep"
    version = "0.0.1"
}

jacoco {
    reportsDir = file("$buildDir/jacoco/report")
}
jacocoTestReport {
    reports {
        xml.enabled = true
        csv.enabled = false
    }
}

repositories {
    jcenter()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    // boot starter
    compile("org.springframework.boot:spring-boot-starter-web:1.5.7.RELEASE")
    providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")

    compile("org.hibernate:hibernate-core:5.2.11.Final")
    compile("org.hibernate:hibernate-entitymanager:5.2.11.Final")

    // Active MQ
    compile "org.springframework.boot:spring-boot-starter-activemq"
    compile "org.apache.activemq:activemq-broker"
    compile "com.fasterxml.jackson.dataformat:jackson-dataformat-xml"

    // JPA Data (We are going to use Repositories, Entities, Hibernate, etc...)
    compile "org.springframework.boot:spring-boot-starter-data-jpa"

    // Use MySQL Connector-J
    compile "mysql:mysql-connector-java"

    // Swagger2
    compile "io.springfox:springfox-swagger2:2.7.0"
    compile "io.springfox:springfox-swagger-ui:2.7.0"
    testCompile "org.springframework.boot:spring-boot-starter-test"

    compile "com.google.guava:guava:23.0"

    compile "org.springframework.boot:spring-boot-configuration-processor"

}
compileJava.dependsOn(processResources)
